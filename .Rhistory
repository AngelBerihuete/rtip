?rtip
??rtip
library(rtip)
library(rtip)
library(rtip)
?OmegaGL
library(rtip)
?OmegaGL
?testTIP
library(rtip)
library(rtip)
library(rtip)
?OmegaGL
?testTIP
library(rtip)
library(rtip)
q()
library(rtip)
??rtip
?rtip
?arpr
?eusilc2
library(rtip)
?eusilc2
data("eusilc2")
str(eusilc2)
library(rtip)
?filterEUSILC
data("LCS2012")
?LCS2012
library(rtip)
?lc
library(rtip)
?lc
library(rtip)
?lc
library(rtip)
?lc
library(rtip)
?lc
setwd("~/Repositories/rtip/data-raw")
LCS2014 <- loadLCS(esudb14d.csv, esudb14h.csv)
LCS2014 <- loadLCS("esudb14d.csv", "esudb14h.csv")
str(LCS2014)
?set
setupDataset()
?setupDataset
?quantile
ls()
dir()
setwd("~/Repositories/rtip/data")
save(LCS2014, file = "LCS2014.RData")
str(LCS2014)
setwd("~/Repositories/rtip/data-raw")
loadLCS <- function(lcs_d_file, lcs_h_file){
dataset1 <- read.table(lcs_d_file, header=TRUE, sep= ",")
dataset2 <- read.table(lcs_h_file, header=TRUE, sep= ",")
sub.dataset1 <- subset(dataset1, select = c("DB010", "DB020", "DB030",
"DB040", "DB090"))
sub.dataset2 <- subset(dataset2, select = c("HB010", "HB020", "HB030",
"HY020", "HX040", "HX240",
"vhRentaa"))
sub.dataset2$HX050 <- sub.dataset2$HX240
sub.dataset2$HX090 <- sub.dataset2$vhRentaa/sub.dataset2$HX240
check1 <- identical(sub.dataset1$DB010, sub.dataset2$HB010) # check if you've the same identification for homes
check2 <- identical(sub.dataset1$DB030, sub.dataset2$HB030) # check if you've the same identification for homes
if(!check1){
stop('Different years!')
}else if (!check2){
stop('You do not have the same identification for homes')
}else{
dataset <- cbind(sub.dataset1, sub.dataset2)
dataset <- subset(dataset, select = c("DB010", "DB020", "DB040", "DB090",
"HX040", "HX050", "HX090"))
}
}
LCS2014 <- loadLCS("esudb14d.csv", "esudb14h.csv")
str(LCS2014)
setwd("~/Repositories/rtip/data-raw")
save(LCS2014, file = "LCS2014.RData")
setwd("~/Repositories/rtip/data")
save(LCS2014, file = "LCS2014.RData")
library(rtip)
library(rtip)
library(rtip)
library(rtip)
?loadEUSILC
?rmpg
library(rtip)
?OmegaGL
library(rtip)
?testTIP
library(rtip)
?testTIP
library(rtip)
?testTIP
library(rtip)
setwd("~/Dropbox/Research/Proyecto/Datasets")
eusil06 <- loadEUSILC("UDB_c06D.csv", "UDB_c06H.csv")
str(eusil06)
eusilc06 <- eusil06
dataSP06 <- setupDataset(eusilc06)
str(dataSP06)
gini(dataSP06)
ls()
?constrOptim
install.packages("plyr")
install.packages("reshape2")
library(ggplot2)
install.packages("mvtnorm")
install.packages("boot")
install.packages("plyr")
library(plyr)
packrat::get_opts()
install.packages("plyr", lib="/home/angel/Repositories/rtip/packrat/lib-R")
library("plyr", lib.loc="~/Repositories/rtip/packrat/lib-R")
remove.packages("plyr", lib="")
install.packages("ggplot2", lib="/home/angel/Repositories/rtip/packrat/lib-R")
library("ggplot2", lib.loc="~/Repositories/rtip/packrat/lib-R")
library(rtip)
packrat::snapshot(prompt = FALSE)
library(rtip)
?testTIP
library(rtip)
?testTIP
library(rtip)
?testTIP
library(rtip)
sessionInfo()
library(rtip)
library(devtools)
install.packages("roxygen2")
library(rtip)
library(rtip)
?loadLCS
data("eusilc2")
ls()
?setupDataset
data(eusilc2)
ATdataset <- setupDataset(eusilc2, country = "AT")
str(ATdataset)
dataset <- ATdataset
samp = 10
select <- (1:samp)/samp
dataset1 <- dataset[order(dataset[,'ipuc']), ]
dataset1$Acum <- cumsum(dataset1$wHX040)
dataset1$Acum.P_i <- dataset1$Acum/dataset1$Acum[length(dataset1$Acum)]
number.individuals <- dataset1$Acum[length(dataset1$Acum)]
p_i <- (1:samp)/samp
np_i <- floor(p_i*number.individuals)
sigma <- mat.or.vec(samp, samp)
vector.gamma_i <- c()
quantile.i <- c()
for(i in 1:samp){
pos.i <- which(dataset1$Acum.P_i>=p_i[i])[1]
quantile.i[i] <- dataset1$ipuc[pos.i]
if(pos.i == 1){
gamma_i <- vector.gamma_i[i] <- dataset1$ipuc[pos.i]
lambda.i <- 0
}else{
gamma_i <- sum(dataset1$ipuc[1:(pos.i-1)]*dataset1$wHX040[1:(pos.i-1)]) +
dataset1$ipuc[pos.i]*(np_i[i]-dataset1$Acum[pos.i-1])
gamma_i <- vector.gamma_i[i] <- gamma_i/np_i[i]
lambda.i <- sum((dataset1$ipuc[1:(pos.i-1)]-gamma_i)^2*dataset1$wHX040[1:(pos.i-1)])+
(dataset1$ipuc[pos.i]-gamma_i)^2*(np_i[i]-dataset1$Acum[pos.i-1])
lambda.i <- lambda.i/np_i[i]
}
for(j in i:samp){
pos.j <- which(dataset1$Acum.P_i>=p_i[j])[1]
if(pos.j == 1){
gamma.j <- dataset1$ipuc[pos.j]
}else{
gamma.j <- sum(dataset1$ipuc[1:(pos.j-1)]*dataset1$wHX040[1:(pos.j-1)]) +
dataset1$ipuc[pos.j]*(np_i[j]-dataset1$Acum[pos.j-1])
gamma.j <- gamma.j/np_i[j]
}
sigma[i,j] <- p_i[i]*(lambda.i+(1-p_i[j])*(dataset1$ipuc[pos.i]-gamma_i)*(dataset1$ipuc[pos.j]-gamma.j)+(dataset1$ipuc[pos.i]-gamma_i)*(gamma.j-gamma_i))
}
}
j
gamma.j
gamma_i
vector.gamma_i
length(vector.gamma_i)
p_i
J <- matrix(NA, nrow = samp, ncol = (samp+1))
J
J <- matrix(0, nrow = samp, ncol = (samp+1))
J
J <- diag(rep(gamma.j, samp))
J
end.col <- -p_i*vector.gamma_i/gamma.j^2
end.col
J <- cbind(J, end.col)
J
dim(OmegaGL())
sigma <- sigma + t(sigma)
diag(sigma) <- diag(sigma)/2
Omega.gl <- sigma/number.individuals
dim(Omega.gl)
Omega.gl <- J %*% Omega.gl %*% t(J)
dim(J)
dim(Omega.gl)
dim(sigma)
p_i
vector.gamma_i
J <- diag(rep(1/gamma.j, (samp-1)))
J
gamma.j
miuc(dataset)
p_i[-1]
p_i[-samp]
end.col <- -p_i[-samp]*vector.gamma_i[-samp]/gamma.j^2
end.col
length(end.col)
J <- cbind(J, end.col)
J
Omega.gl <- J %*% sigma %*% t(J)
Omega.gl
Omega.gl <- Omega.gl/number.individuals
Omega.gl
gl.curve <- vector.gamma_i*p_i/gamma.j
gl.curve
length(gl.curve)
?lc
library(rtip)
library(rtip)
session_info()
library(rtip)
library(rtip)
library(rtip)
?OmegaGL
?OmegaGL
library(rtip)
?OmegaGL
library(rtip)
setwd("~/Dropbox/Research/Proyecto/Paper2/rtip")
ls
setwd("~/Dropbox/Research/Proyecto/Paper2/rtip")
setwd("~/GitRepos/rtip/R")
?constrOptim
setwd("~/Dropbox/Research/Proyecto/Paper2/rtip")
?lc
library(rtip)
?lc
lc1 <- lc(ATdataset1, plot = FALSE)
?testGL
data(eusilc2)
ATdataset1 <- setupDataset(eusilc2, country = "AT", region = "Burgenland")
ATdataset2 <- setupDataset(eusilc2, country = "AT", region = "Carinthia")
lc1 <- lc(ATdataset1, plot = FALSE)
lc2 <- lc(ATdataset2, plot = FALSE)
str(lc1)
str(lc2)
ggplot(lc1, aes(x.lg, y.lg)) + geom_line(color = "red") +
geom_line(dataset = lc2, aes(x.lg, y.lg))
ggplot(lc1, aes(x.lg, y.lg)) + geom_line(color = "red") +
geom_line(lc2, aes(x.lg, y.lg))
ggplot(data = lc1, aes(x.lg, y.lg)) + geom_line(color = "red") +
geom_line(data = lc2, aes(x.lg, y.lg))
?lc
testGL(ATdataset1, ATdataset2, generalized = FALSE)
testGL(ATdataset2, ATdataset1, generalized = FALSE)
setwd("~/ownCloud/UCA/Nautica/Practicas/pract4")
load("~/ownCloud/UCA/Nautica/Practicas/pract4/basedatos.Rda")
ls()
str(datos)
library(rtip)
library(rtip)
library(rtip)
library(rtip)
library(rtip)
library(rtip)
?devtools::build_win
devtools::build_win()
library(rtip)
devtools::build_win()
library(rtip)
library(rtip)
?LCS2014
? Rd2pdf
packrat::snapshot(prompt = FALSE)
packrat::bundle(file = '~/Documentos/rtip.tar.gz', overwrite = TRUE)
library(rtip)
devtools::build_win()
devtools::release()
?devtools:release
?release
devtools::revdep_check()
library(rtip)
sessionInfo()
library(rtip)
devtools::use_build_ignore("NEWS.md")
devtools::build_win()
library(rtip)
devtools::release()
install.packages("devtools")
library(devtools)
devtools::release(pkg = "rtip")
devtools::release(pkg = ".")
devtools::release()
library("ggplot2", lib.loc="~/GitRepos/rtip/packrat/lib/x86_64-suse-linux-gnu/3.3.0")
library("boot", lib.loc="~/GitRepos/rtip/packrat/lib-R")
library("mvtnorm", lib.loc="~/GitRepos/rtip/packrat/lib/x86_64-suse-linux-gnu/3.3.0")
library("plyr", lib.loc="~/GitRepos/rtip/packrat/lib/x86_64-suse-linux-gnu/3.3.0")
devtools::release()
library("plyr", lib.loc="~/GitRepos/rtip/packrat/lib-R")
library("boot", lib.loc="~/GitRepos/rtip/packrat/lib-R")
devtools::release()
library("ggplot2", lib.loc="~/GitRepos/rtip/packrat/lib-R")
detach("package:ggplot2", unload=TRUE)
library("ggplot2", lib.loc="~/GitRepos/rtip/packrat/lib-R")
library("tools", lib.loc="~/GitRepos/rtip/packrat/lib-R")
library("tools", lib.loc="~/GitRepos/rtip/packrat/lib-R")
devtools::release()
library("rtip", lib.loc="~/GitRepos/rtip/packrat/lib/x86_64-suse-linux-gnu/3.3.0")
devtools::release()
install.packages("rversions")
devtools::release()
install.packages(c("curl", "git2r", "jsonlite", "openssl"))
library(rtip)
devtools::release()
q()
devtools::release()
devtools::release()
library(rtip)
devtools::release()
library(rtip)
install.packages(c("clue", "coda", "colorspace", "digest", "Directional", "ggplot2", "git2r", "Hmisc", "htmlTable", "jsonlite", "leaps", "openssl", "polynom", "Rcmdr", "RcppArmadillo", "Rfast", "rmarkdown", "skmeans", "slam", "zoo"))
install.packages(c("cluster", "codetools", "foreign", "lattice", "Matrix", "mgcv", "survival"), lib="/home/angel/gitrepos/rtip/packrat/lib-R")
install.packages(c("cluster", "codetools", "foreign", "lattice", "Matrix", "mgcv", "survival"), lib="/home/angel/gitrepos/rtip/packrat/lib-R")
library("cluster", lib.loc="~/gitrepos/rtip/packrat/lib-R")
detach("package:cluster", unload=TRUE)
install.packages("cluster", lib="/home/angel/gitrepos/rtip/packrat/lib-R")
library("cluster", lib.loc="~/gitrepos/rtip/packrat/lib-R")
library(rtip)
install.packages("roxygen2")
library(roxygen2)
help(roxygen2)
library(rtip)
install.packages("devtools")
data(eusilc2)
ATdataset <- setupDataset(eusilc2, country = "AT", s = "OECD")
tip.curve <- tip(ATdataset, arpt.value = arpt(ATdataset), norm = TRUE)
str(tip.curve)
tip.curve <- tip(ATdataset, arpt.value = arpt(ATdataset), norm = TRUE, plot = TRUE)
tip.curve <- tip(ATdataset, arpt.value = arpt(ATdataset), samplesize=50, norm = TRUE, plot = TRUE)
tip.curve <- tip(ATdataset, arpt.value = arpt(ATdataset), samplesize="complete", norm = TRUE, plot = TRUE)
library(rtip)
data(eusilc2)
ATdataset <- setupDataset(eusilc2, country = "AT", s = "OECD")
tip.curve <- tip(ATdataset, arpt.value = arpt(ATdataset), samplesize="complete", norm = TRUE, plot = TRUE)
tip.curve <- tip(ATdataset, arpt.value = arpt(ATdataset), samplesize=10, norm = TRUE, plot = TRUE)
tip.curve <- tip(ATdataset, arpt.value = arpt(ATdataset), samplesize=30, norm = TRUE, plot = TRUE)
tip.curve <- tip(ATdataset, arpt.value = arpt(ATdataset), samplesize=30, norm = FALSE, plot = TRUE)
library(rtip)
data(eusilc2)
ATdataset <- setupDataset(eusilc2, country = "AT", s = "OECD")
tip.curve <- tip(ATdataset, arpt.value = arpt(ATdataset), samplesize=30, norm = FALSE, plot = TRUE)
library(rtip)
data(eusilc2)
ATdataset <- setupDataset(eusilc2, country = "AT", s = "OECD")
tip.curve <- tip(ATdataset, arpt.value = arpt(ATdataset), samplesize=30, norm = FALSE, plot = TRUE)
tip.curve <- tip(ATdataset, arpt.value = arpt(ATdataset), samplesize=10, norm = FALSE, plot = TRUE)
tip.curve <- tip(ATdataset, arpt.value = arpt(ATdataset), samplesize=50, norm = FALSE, plot = TRUE)
install.packages(c("boot", "colorspace", "curl", "digest", "evaluate", "formatR", "ggplot2", "git2r", "htmltools", "httr", "jsonlite", "knitr", "markdown", "memoise", "mime", "mvtnorm", "openssl", "packrat", "plyr", "R6", "Rcpp", "reshape2", "rmarkdown", "rstudioapi", "scales", "stringi", "stringr", "withr", "yaml"))
install.packages(c("boot", "cluster", "codetools", "foreign", "lattice", "MASS", "Matrix", "mgcv", "nlme", "rpart", "survival"), lib="/home/angel/gitrepos/rtip/packrat/lib-R")
library(rtip)
library(rtip)
library(roxygen2)
help(roxygen2)
vignette("roxygen2", package = "roxygen2")
devtools::load_all(".")
installed.packages("testthat")
installed.packages("testthat")
library(rtip)
install.packages("roxygen2")
library(rtip)
data(eusilc2)
ATdataset <- setupDataset(eusilc2, country = "AT")
library(rtip)
ATdataset <- setupDataset(eusilc2, country = "AT")
str(ATdataset)
str(eusilc2)
unique(eusilc2$DB040)
data(LCS2014)
ls()
str(LCS2014)
unique(LCS2014$DB040)
ATdataset <- setupDataset(LCS2014, country = "ES", region = "ES64")
ES64dataset <- setupDataset(LCS2014, country = "ES", region = "ES64")
ES11dataset <- setupDataset(LCS2014, country = "ES", region = "ES11")
ES12dataset <- setupDataset(LCS2014, country = "ES", region = "ES12")
ES64dataset <- setupDataset(LCS2014, country = "ES", region = "ES64")
ES11dataset <- setupDataset(LCS2014, country = "ES", region = "ES11")
ES12dataset <- setupDataset(LCS2014, country = "ES", region = "ES12")
ES13dataset <- setupDataset(LCS2014, country = "ES", region = "ES13")
ES1dataset <- cbind(ES11dataset, ES12dataset, ES13dataset)
ES1dataset <- rbind(ES11dataset, ES12dataset, ES13dataset)
str(ES1dataset)
rm(list = ls())
require(rtip)
data(LCS2014)
ESdataset <- setupDataset(LCS2014, country = "ES")
ES64dataset <- setupDataset(LCS2014, country = "ES", region = "ES64")
# macro-region according to code ES1 in the NUTS 1
# https://en.wikipedia.org/wiki/NUTS_statistical_regions_of_Spain
ES11dataset <- setupDataset(LCS2014, country = "ES", region = "ES11")
ES12dataset <- setupDataset(LCS2014, country = "ES", region = "ES12")
ES13dataset <- setupDataset(LCS2014, country = "ES", region = "ES13")
ES1dataset <- rbind(ES11dataset, ES12dataset, ES13dataset)
testTIP(ATdataset1, ATdataset, same.arpt.value = arpt(ESdataset))
testTIP(ES64dataset, ES1dataset, same.arpt.value = arpt(ESdataset))
library(rtip)
library(rtip)
data(eusilc2)
ATdataset <- setupDataset(eusilc2, country = "AT", s = "OECD")
tip.curve <- tip(ATdataset, arpt.value = arpt(ATdataset), norm = TRUE, plot = TRUE)
tip.curve <- tip(ATdataset, arpt.value = arpt(ATdataset), samplesize = 10, norm = TRUE, plot = TRUE)
tip.curve <- tip(ATdataset, arpt.value = arpt(ATdataset), samplesize = 'complete', norm = TRUE, plot = TRUE)
pppr=NULL
!is.null(pppr)
pppr = 4
!is.null(pppr)
?warning
data(eusilc2)
ATdataset <- setupDataset(eusilc2, country = "AT")
ATdataset
head(ATdataset)
ATdataset$ipuc[1]=-3
head(ATdataset)
length(which(ATdataset$ipuc<0))!=0
which(ATdataset$ipuc<0)
warning("Some of the income values are negatives")
library(rtip)
data("eusilc2")
ATdataset <- setupDataset(eusilc2, country = "AT")
which(ATdataset$ipuc<0)
data("data/LCS2014.RData")
data("LCS2014")
ls
ls()
LCS2014
ESdataset <- setupDataset(LCS2014, country = "ES")
ESdataset <- setupDataset(LCS2014)
ESdataset <- setupDataset(eusilc2)
ESdataset <- setupDataset(eusilc2, country = NULL)
library(rtip)
data(eusilc2)
arpr(ATdataset,arpt.value = arpt(ATdataset))
ATdataset <- setupDataset(eusilc2, country = "AT", s = "OECD")
arpr(ATdataset,arpt.value = arpt(ATdataset))
ATdataset
library(rtip)
ls()
arpr(ATdataset,arpt.value = arpt(ATdataset))
library(rtip)
arpr(ATdataset,arpt.value = arpt(ATdataset))
arpt(ATdataset)
is.null(NULL)
library(rtip)
library(rtip)
gini(ATdataset)
gini(ATdataset,ci=TRUE)
gini(ATdataset,ci=TRUE,verbose = TRUE)
library(rtip)
ATdataset <- setupDataset(eusilc2, country = "AT")
str(ATdataset
)
ATdataset <- setupDataset(eusilc2, country = "AT", region = "Burgenland")
ATdataset
dim(ATdataset)
ATdataset <- setupDataset(eusilc2, country = "AT")
dim(ATdataset)
ATdataset <- setupDataset(eusilc2, country = "AT", region = c("Burgenland", "Carinthia"))
library(rtip)
ATdataset <- setupDataset(eusilc2, country = "AT", region = c("Burgenland", "Carinthia"))
dim(ATdataset)
ATdataset$region
ATdataset$DB040
names(ATdataset$DB040)
levels(ATdataset$DB040)
?levels
library(rtip)
data(eusilc2)
ATdataset <- setupDataset(eusilc2, country = "AT", s = "OECD")
lc.curve <- lc(ATdataset)
str(lc.curve)
lc.curve <- lc(ATdataset, plot = TRUE)
lc.curve <- lc(ATdataset, generalized = TRUE, plot = TRUE)
library(rtip)
ATdataset <- setupDataset(eusilc2, country = "AT", s = "OECD")
mih(ATdataset)
mih(ATdataset, ci =TRUE)
library(rtip)
mip(ATdataset)
mip(ATdataset, ci = TRUE)
library(rtip)
qsr(ATdataset)
qsr(ATdataset, ci=TRUE)
library(rtip)
library(rtip)
tip.curve <- tip(ATdataset, arpt.value = arpt(ATdataset), norm = TRUE)
tip.curve <- tip(ATdataset, arpt.value = arpt(ATdataset), norm = FALSE)
tip.curve <- tip(ATdataset, arpt.value = arpt(ATdataset), norm = FALSE, plot = TRUE)
library(rtip)
tip.curve <- tip(ATdataset, arpt.value = arpt(ATdataset), norm = FALSE, plot = TRUE)
tip.curve <- tip(ATdataset, arpt.value = arpt(ATdataset), norm = TRUE, plot = TRUE)
library(rtip)
tip.curve <- tip(ATdataset, arpt.value = arpt(ATdataset), norm = TRUE, plot = TRUE)
tip.curve <- tip(ATdataset, arpt.value = arpt(ATdataset), norm = FALSE, plot = TRUE)
library(rtip)
