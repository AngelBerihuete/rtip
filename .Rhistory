tip2 <- tip(Carinthia, arpt(Carinthia),  norm = TRUE, plot = FALSE)
p5 <- ggplot(data = tip1, aes(x.tip, y.tip, linetype = "Burgenland")) +
geom_line() +
geom_line(data = tip2, aes(x.tip, y.tip,  linetype = "Carinthia")) +
scale_x_continuous(expression(p), limits = c(0, 0.3)) +
scale_y_continuous(expression(TIP(p,z))) +
scale_linetype_discrete(name = "Region") +
theme_bw() +
theme(legend.background = element_rect(colour = "black"),
legend.position=c(0.825,0.15))
print(p5)
tip1 <- tip(Burgenland, arpt.value = arpt(Burgenland) , norm = TRUE, plot = FALSE)
tip2 <- tip(Carinthia, arpt.value = arpt(Carinthia),  norm = TRUE, plot = FALSE)
p5 <- ggplot(data = tip1, aes(x.tip, y.tip, linetype = "Burgenland")) +
geom_line() +
geom_line(data = tip2, aes(x.tip, y.tip,  linetype = "Carinthia")) +
scale_x_continuous(expression(p), limits = c(0, 0.3)) +
scale_y_continuous(expression(TIP(p,z))) +
scale_linetype_discrete(name = "Region") +
theme_bw() +
theme(legend.background = element_rect(colour = "black"),
legend.position=c(0.825,0.15))
print(p5)
library(rtip)
devtools::build_win()
devtools::revdep_check()
setwd("~/ownCloud/Research/rtip-rjournal/version2")
library(rtip)
library(rtip)
set.seed(1972)
# Datasets
# --------
# A synthetic dataset generated from real Austrian EU-SILC:
data(eusilc2)
head(eusilc2, 3)
# The Spanish National Statistics Institute (INE in spanish)
# release for the living conditions survey in 2014:
data(LCS2014)
head(LCS2014,3)
# Setup the dataset
# -----------------
dataset <- setupDataset(eusilc2, country = "AT", region = "all",
s = "OECD", deflac = NULL, pppr = NULL)
head(dataset,3)
arpt(dataset) # Default values pz=0.6, ci=FALSE, verbose=FALSE
dataset <- setupDataset(eusilc2, country = "AT", region = "all",
s = "OECD", deflac = NULL, pppr = NULL)
head(dataset,3)
arpt(dataset) # Default values pz=0.6, ci=FALSE, verbose=FALSE
arpr(dataset, arpt.value = arpt60, ci = FALSE)
arpt60 <- arpt(dataset)
arpr(dataset, arpt.value = arpt60, ci = FALSE)
arpt40 <- arpt(dataset, pz = 0.4)
arpr(dataset, arpt.value = arpt40)
## Maximun of TIP curve: a measure of the intensity of poverty.
# It is equal to the mean poverty gap, if norm = FALSE, or the mean poverty gap
# if norm = TRUE.
s1(dataset, arpt.value = arpt60, norm = TRUE)
## Maximun of TIP curve: a measure of the intensity of poverty.
# It is equal to the mean poverty gap, if norm = FALSE, or the mean poverty gap
# if norm = TRUE.
s1(dataset, arpt.value = arpt60, norm = FALSE)
gini(dataset)
qsr(dataset)
mip(dataset)
mih(dataset)
miuc(dataset)
s2(dataset, arpt.value = arpt(dataset), norm = TRUE)
Burgenland <- setupDataset(eusilc2, country = "AT", region = "Burgenland")
lorenz_curve <- lc(Burgenland, generalized = FALSE, plot=TRUE)
lorenz_curve <- lc(Burgenland, generalized = TRUE, plot=TRUE)
?lc
lorenz_curve <- lc(Burgenland, samplesize = "complete", generalized = TRUE, plot=TRUE)
Burgenland <- setupDataset(eusilc2, country = "AT", region = "Burgenland")
lorenz_curve <- lc(Burgenland, generalized = FALSE, plot=TRUE)
dataset <- setupDataset(eusilc2, country = "AT", region = "Burgenland")
lc(dataset = dataset, generalized = TRUE, plot=TRUE)
miuc(dataset)
p1 <- ggplot(lorenz_curve, aes(x.lg, y.lg)) + geom_line() +
geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1), linetype = "dotted", color = "grey") +
scale_x_continuous(expression(p)) +
scale_y_continuous(expression(L(p))) + theme_bw()
print(p1)
lorenz_curve <- lc(Burgenland, generalized = FALSE, plot=TRUE)
p1 <- ggplot(lorenz_curve, aes(x.lg, y.lg)) + geom_line() +
geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1), linetype = "dotted", color = "grey") +
scale_x_continuous(expression(p)) +
scale_y_continuous(expression(L(p))) + theme_bw()
print(p1)
lorenz_curve <- lc(Burgenland, generalized = TRUE, plot=TRUE)
p1 <- ggplot(lorenz_curve, aes(x.lg, y.lg)) + geom_line() +
geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1), linetype = "dotted", color = "grey") +
scale_x_continuous(expression(p)) +
scale_y_continuous(expression(L(p))) + theme_bw()
print(p1)
lorenz_curve <- lc(Burgenland, generalized = FALSE, plot=TRUE)
p1 <- ggplot(lorenz_curve, aes(x.lg, y.lg)) + geom_line() +
geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1), linetype = "dotted", color = "grey") +
scale_x_continuous(expression(p)) +
scale_y_continuous(expression(L(p))) + theme_bw()
print(p1)
tip_curve <- tip(Burgenland, arpt.value = arpt(Burgenland), norm = TRUE, plot = TRUE)
tip_curve <- tip(Burgenland, samplesize = "complete", arpt.value = arpt(Burgenland), norm = TRUE, plot = TRUE)
tip_curve <- tip(Burgenland, arpt.value = arpt(Burgenland), norm = TRUE, plot = TRUE)
p2 <- ggplot(tip_curve, aes(x.tip, y.tip)) + geom_line() +
scale_x_continuous(expression(p)) +
scale_y_continuous(expression(TIP(p, z))) + theme_bw()
print(p2)
Burgenland <- setupDataset(eusilc2, country = "AT", region = "Burgenland")
Carinthia <- setupDataset(eusilc2, country = "AT", region = "Carinthia")
testGL(Burgenland, Carinthia, generalized = TRUE, samplesize = 10)
testGL(Carinthia, Burgenland, generalized = FALSE, samplesize = 10)
Burgenland <- setupDataset(eusilc2, country = "AT", region = "Burgenland")
Carinthia <- setupDataset(eusilc2, country = "AT", region = "Carinthia")
nsample = 10
dat1 <- OmegaGL(Burgenland, samp = nsample, generalized = FALSE)
dat2 <- OmegaGL(Carinthia, samp = nsample, generalized = FALSE)
data1 <- as.data.frame(dat1[2:3])
data2 <- as.data.frame(dat2[2:3])
data1<-rbind(c(0,0), data1)
data2<-rbind(c(0,0), data2)
data1$se <- c(NA, sqrt(diag(dat1$Omega)), NA)
data2$se <- c(NA, sqrt(diag(dat2$Omega)), NA)
p3 <- ggplot(data = data1, aes(p, gl.curve, linetype = "Burgenland")) +
geom_line() +
geom_ribbon(aes(ymin=gl.curve-se*qnorm(0.975), ymax=gl.curve+se*qnorm(0.975)), fill = "grey70", alpha=0.3) +
geom_line(data = data2, aes(p, gl.curve, linetype = "Carinthia")) +
geom_ribbon(data = data2, aes(ymin=gl.curve-se*qnorm(0.975), ymax=gl.curve+se*qnorm(0.975)), fill = "grey70", alpha=0.3) +
geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1), linetype = "dotted", color = "grey") +
scale_x_continuous(expression(p)) +
scale_y_continuous(expression(GL(p))) +
scale_linetype_discrete(name = "Region") +
theme_bw() +
theme(legend.background = element_rect(colour = "black"),
legend.position=c(0.825,0.15))
print(p3)
p4 <- ggplot(data = data1, aes(p, gl.curve, linetype = "Burgenland")) +
geom_line() +
geom_line(data = data2, aes(p, gl.curve, linetype = "Carinthia")) +
geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1), linetype = "dotted", color = "grey") +
scale_x_continuous(expression(p)) +
scale_y_continuous(expression(GL(p))) +
scale_linetype_discrete(name = "Region") +
theme_bw() +
theme(legend.background = element_rect(colour = "black"),
legend.position=c(0.825,0.15))
print(p4)
Burgenland <- setupDataset(eusilc2, country = "AT", region = "Burgenland")
Carinthia <- setupDataset(eusilc2, country = "AT", region = "Carinthia")
nsample = 10
dat1 <- OmegaGL(Burgenland, samplesize = nsample, generalized = FALSE)
dat2 <- OmegaGL(Carinthia, samplesize =  nsample, generalized = FALSE)
data1 <- as.data.frame(dat1[2:3])
data2 <- as.data.frame(dat2[2:3])
data1<-rbind(c(0,0), data1)
data2<-rbind(c(0,0), data2)
data1$se <- c(NA, sqrt(diag(dat1$Omega)), NA)
data2$se <- c(NA, sqrt(diag(dat2$Omega)), NA)
p3 <- ggplot(data = data1, aes(p, gl.curve, linetype = "Burgenland")) +
geom_line() +
geom_ribbon(aes(ymin=gl.curve-se*qnorm(0.975), ymax=gl.curve+se*qnorm(0.975)), fill = "grey70", alpha=0.3) +
geom_line(data = data2, aes(p, gl.curve, linetype = "Carinthia")) +
geom_ribbon(data = data2, aes(ymin=gl.curve-se*qnorm(0.975), ymax=gl.curve+se*qnorm(0.975)), fill = "grey70", alpha=0.3) +
geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1), linetype = "dotted", color = "grey") +
scale_x_continuous(expression(p)) +
scale_y_continuous(expression(GL(p))) +
scale_linetype_discrete(name = "Region") +
theme_bw() +
theme(legend.background = element_rect(colour = "black"),
legend.position=c(0.825,0.15))
print(p3)
Burgenland <- setupDataset(eusilc2, country = "AT", region = "Burgenland")
Carinthia <- setupDataset(eusilc2, country = "AT", region = "Carinthia")
nsample = 10
dat1 <- OmegaGL(Burgenland, samplesize = nsample, generalized = FALSE)
dat2 <- OmegaGL(Carinthia, samplesize =  nsample, generalized = FALSE)
data1 <- as.data.frame(dat1[2:3])
data2 <- as.data.frame(dat2[2:3])
data1<-rbind(c(0,0), data1)
data2<-rbind(c(0,0), data2)
data1$se <- c(NA, sqrt(diag(dat1$Omega)), NA)
data2$se <- c(NA, sqrt(diag(dat2$Omega)), NA)
p3 <- ggplot(data = data1, aes(p, gl.curve, linetype = "Burgenland")) +
geom_line() +
geom_ribbon(aes(ymin=gl.curve-se*qnorm(0.975), ymax=gl.curve+se*qnorm(0.975)), fill = "grey70", alpha=0.3) +
geom_line(data = data2, aes(p, gl.curve, linetype = "Carinthia")) +
geom_ribbon(data = data2, aes(ymin=gl.curve-se*qnorm(0.975), ymax=gl.curve+se*qnorm(0.975)), fill = "grey70", alpha=0.3) +
geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1), linetype = "dotted", color = "grey") +
scale_x_continuous(expression(p)) +
scale_y_continuous(expression(L(p))) +
scale_linetype_discrete(name = "Region") +
theme_bw() +
theme(legend.background = element_rect(colour = "black"),
legend.position=c(0.825,0.15))
print(p3)
p4 <- ggplot(data = data1, aes(p, gl.curve, linetype = "Burgenland")) +
geom_line() +
geom_line(data = data2, aes(p, gl.curve, linetype = "Carinthia")) +
geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1), linetype = "dotted", color = "grey") +
scale_x_continuous(expression(p)) +
scale_y_continuous(expression(L(p))) +
scale_linetype_discrete(name = "Region") +
theme_bw() +
theme(legend.background = element_rect(colour = "black"),
legend.position=c(0.825,0.15))
print(p4)
testTIP(Carinthia, Burgenland, norm = TRUE, samplesize = 50)
tip1 <- tip(Burgenland, arpt.value = arpt(Burgenland), norm = TRUE, plot = FALSE)
tip2 <- tip(Carinthia, arpt.value = arpt(Carinthia),  norm = TRUE, plot = FALSE)
p5 <- ggplot(data = tip1, aes(x.tip, y.tip, linetype = "Burgenland")) +
geom_line() +
geom_line(data = tip2, aes(x.tip, y.tip,  linetype = "Carinthia")) +
scale_x_continuous(expression(p), limits = c(0, 0.3)) +
scale_y_continuous(expression(TIP(p,z))) +
scale_linetype_discrete(name = "Region") +
theme_bw() +
theme(legend.background = element_rect(colour = "black"),
legend.position=c(0.825,0.15))
print(p5)
p5 <- ggplot(data = tip1, aes(x.tip, y.tip, linetype = "Burgenland")) +
geom_line() +
geom_line(data = tip2, aes(x.tip, y.tip,  linetype = "Carinthia")) +
scale_x_continuous(expression(p), limits = c(0, 0.3)) +
scale_y_continuous(expression(TIP(p,z[i]))) +
scale_linetype_discrete(name = "Region") +
theme_bw() +
theme(legend.background = element_rect(colour = "black"),
legend.position=c(0.825,0.15))
print(p5)
library(boot)
?boot.ci
library(rtip)
arpr(dataset, arpt.value = arpt60)
arpr(dataset, arpt.value = arpt60, ci = 0.95)
arpr(dataset, arpt.value = arpt60, ci = 0.98)
?boot
?boot.ci
arpr(dataset, arpt.value = arpt60, ci = c(0.95, 0.98))
arpr(dataset, arpt.value = arpt60, ci = c(0.95, 0.98),verbose = TRUE)
library(rtip)
# Percentage of persons with an equivalised disposable income below 60% of the
# median equivalised disposable income:
arpt60 <- arpt(dataset)
arpr(dataset, arpt.value = arpt60)
arpr(dataset, arpt.value = arpt60, ci = c(0.95, 0.98))
library(rtip)
library(rtip)
gini(dataset, ci = 0.99)
qsr(dataset,  ci = 0.99)
library(rtip)
gini(dataset, ci = 0.99)
qsr(dataset,  ci = 0.99)
mip(dataset,  ci = 0.99)
mih(dataset)
miuc(dataset,  ci = c(0.90, 0.99))
s2(dataset, arpt.value = arpt(dataset), norm = TRUE, ci = 0.99)
mih(dataset, ci = c(0.90, 0.99))
mih(dataset, ci = c(0.90, 0.99))
miuc(dataset, ci = c(0.90, 0.99))
library(rtip)
mih(dataset, ci = c(0.90, 0.99))
mip(dataset, ci = 0.99)
miuc(dataset, ci = c(0.90, 0.99))
s2(dataset, arpt.value = arpt(dataset), norm = TRUE, ci = 0.99)
install.packages(c("backports", "curl", "digest", "git2r", "knitr", "mvtnorm", "openssl", "Rcpp", "reshape2", "rlang", "rmarkdown", "rprojroot", "stringi", "tibble", "viridisLite", "withr", "xml2", "yaml"))
install.packages(c("boot", "cluster", "codetools", "foreign", "lattice", "MASS", "Matrix", "mgcv", "nlme", "rpart", "survival"), lib="/home/angel/gitrepos/rtip/packrat/lib-R")
install.packages(c("boot", "cluster", "codetools", "foreign", "lattice", "MASS", "Matrix", "mgcv", "nlme", "rpart", "survival"), lib="/home/angel/gitrepos/rtip/packrat/lib-R")
library("boot", lib.loc="~/gitrepos/rtip/packrat/lib/x86_64-suse-linux-gnu/3.3.1")
install.packages("boot", lib="/home/angel/gitrepos/rtip/packrat/lib-R")
install.packages(c("boot", "cluster", "codetools", "foreign", "lattice", "MASS", "Matrix", "mgcv", "nlme", "rpart", "survival"), lib="/home/angel/gitrepos/rtip/packrat/lib-R")
library("boot", lib.loc="~/gitrepos/rtip/packrat/lib-R")
library(booy)
library(boot)
library(ggplot2)
install.packages("ggplot2")
install.packages("mvtnorm")
install.packages("plyr")
install.packages("boot")
library(rtip)
install.packages("devtools")
library(rtip)
data(eusilc2)
ATdataset <- setupDataset(eusilc2, country = "AT")
arpr(ATdataset,arpt.value = arpt(ATdataset), ci = TRUE)
arpr(ATdataset,arpt.value = arpt(ATdataset), ci = .90)
library(rtip)
install.packages(c("ggplot2", "boot", "mvtnorm", "plyr"))
library(rtip)
devtools::install_github("rstudio/packrat")
library(rtip)
install.packages("devtools")
library(devtools)
library(rtip)
devtools::document(roclets=c('rd', 'collate', 'namespace'))
install.packages("testthat")
library(rtip)
install.packages(c("ggplot2", "boot", "mvtnorm", "plyr"), lib="/home/angel/gitrepos/rtip/packrat/lib-R/x86_64-suse-linux-gnu/3.4.3")
library(rtip)
library(rtip)
library(devtools)
library(rtip)
library(rtip)
packrat::off()
packrat::on()
install.packages(c("backports", "colorspace", "curl", "digest", "evaluate", "formatR", "git2r", "htmltools", "httr", "jsonlite", "knitr", "markdown", "memoise", "mime", "openssl", "Rcpp", "reshape2", "rmarkdown", "rprojroot", "rstudioapi", "stringi", "stringr", "xml2", "yaml"))
install.packages(c("boot", "cluster", "codetools", "foreign", "lattice", "MASS", "Matrix", "mgcv", "nlme", "rpart", "survival"), lib="/home/angel/gitrepos/rtip/packrat/lib-R/x86_64-suse-linux-gnu/3.4.3")
.libPaths()
library(rtip)
devtools::check()
devtools::check_failures()
devtools::revdep_check()
devtools::check()
packrat::disable()
library(rtip)
library(rtip)
devtools::build_win()
library(rtip)
set.seed(1972)
data(eusilc2)
head(eusilc2, 3)
# The Spanish National Statistics Institute (INE in spanish)
# release for the living conditions survey in 2014:
data(LCS2014)
head(LCS2014,3)
dataset <- setupDataset(eusilc2, country = "AT", region = NULL,
s = NULL, deflator = NULL, pppr = NULL)
head(dataset,3)
arpt(dataset) # Default values pz=0.6, ci=FALSE, verbose=FALSE
?arpt
arpt(dataset, ipuc = "ipuc", hhcsw = "DB090", hhsize = "HX040",
pz = 0.6, ci = NULL, rep = 500, verbose = FALSE) # Default values
arpt60 <- arpt(dataset)
arpr(dataset, arpt.value = arpt60)
arpr(dataset, arpt.value = arpt60, ci = 0.98)
# Percentage of persons with an equivalised disposable income below 40% of the
# median equivalised disposable income:
arpt40 <- arpt(dataset, pz = 0.4)
arpr(dataset, arpt.value = arpt40)
## Maximum of TIP curve: a measure of the intensity of poverty.
# It is equal to the mean poverty gap, if norm = FALSE, or the normalised mean
# poverty gap if norm = TRUE.
s1(dataset, arpt.value = arpt60, norm = TRUE)
Burgenland <- setupDataset(eusilc2, country = "AT", region = "Burgenland")
lorenz_curve <- lc(Burgenland, generalized = TRUE, plot=TRUE)
p1 <- ggplot(lorenz_curve, aes(x.lg, y.lg)) + geom_line() +
geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1), linetype = "dotted", color = "grey") +
scale_x_continuous(expression(p)) +
scale_y_continuous(expression(L(p))) + theme_bw()
print(p1)
lorenz_curve <- lc(Burgenland, generalized = FALSE, plot=TRUE)
p1 <- ggplot(lorenz_curve, aes(x.lg, y.lg)) + geom_line() +
geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1), linetype = "dotted", color = "grey") +
scale_x_continuous(expression(p)) +
scale_y_continuous(expression(L(p))) + theme_bw()
print(p1)
tip_curve <- tip(Burgenland, arpt.value = arpt(Burgenland), norm = TRUE, plot = TRUE)
p2 <- ggplot(tip_curve, aes(x.tip, y.tip)) + geom_line() +
scale_x_continuous(expression(p)) +
scale_y_continuous(expression(TIP(p, z))) + theme_bw()
print(p2)
Burgenland <- setupDataset(eusilc2, country = "AT", region = "Burgenland")
Carinthia <- setupDataset(eusilc2, country = "AT", region = "Carinthia")
# To test the null hypothesis that the income distribution of Burgenland
# dominates the income distribution of Carinthia in the generalized Lorenz
# sense:
testGL(Burgenland, Carinthia, generalized = TRUE, samplesize = 10)
testGL(Carinthia, Burgenland, generalized = FALSE, samplesize = 10)
# Plotting Lorenz curves (generalized = FALSE) in the same graph adding
# 95% confidence intervals.
# Let's observe that the standard errors in this case are negligible and
# we cannot distinguish the confidence intervals in the graph.
Burgenland <- setupDataset(eusilc2, country = "AT", region = "Burgenland")
Carinthia <- setupDataset(eusilc2, country = "AT", region = "Carinthia")
nsample = 10
dat1 <- OmegaGL(Burgenland, samplesize = nsample, generalized = FALSE)
dat2 <- OmegaGL(Carinthia, samplesize =  nsample, generalized = FALSE)
data1 <- as.data.frame(dat1[2:3])
data2 <- as.data.frame(dat2[2:3])
data1<-rbind(c(0,0), data1)
data2<-rbind(c(0,0), data2)
data1$se <- c(NA, sqrt(diag(dat1$Omega)), NA)
data2$se <- c(NA, sqrt(diag(dat2$Omega)), NA)
p3 <- ggplot(data = data1, aes(p, gl.curve, linetype = "Burgenland")) +
geom_line() +
geom_ribbon(aes(ymin=gl.curve-se*qnorm(0.975), ymax=gl.curve+se*qnorm(0.975)), fill = "grey70", alpha=0.3) +
geom_line(data = data2, aes(p, gl.curve, linetype = "Carinthia")) +
geom_ribbon(data = data2, aes(ymin=gl.curve-se*qnorm(0.975), ymax=gl.curve+se*qnorm(0.975)), fill = "grey70", alpha=0.3) +
geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1), linetype = "dotted", color = "grey") +
scale_x_continuous(expression(p)) +
scale_y_continuous(expression(L(p))) +
scale_linetype_discrete(name = "Region") +
theme_bw() +
theme(legend.background = element_rect(colour = "black"),
legend.position=c(0.825,0.15))
print(p3)
p4 <- ggplot(data = data1, aes(p, gl.curve, linetype = "Burgenland")) +
geom_line() +
geom_line(data = data2, aes(p, gl.curve, linetype = "Carinthia")) +
geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1), linetype = "dotted", color = "grey") +
scale_x_continuous(expression(p)) +
scale_y_continuous(expression(L(p))) +
scale_linetype_discrete(name = "Region") +
theme_bw() +
theme(legend.background = element_rect(colour = "black"),
legend.position=c(0.825,0.15))
print(p4)
testTIP(Carinthia, Burgenland, norm = TRUE, samplesize = 50)
tip1 <- tip(Burgenland, arpt.value = arpt(Burgenland), norm = TRUE, plot = FALSE)
tip2 <- tip(Carinthia, arpt.value = arpt(Carinthia),  norm = TRUE, plot = FALSE)
p5 <- ggplot(data = tip1, aes(x.tip, y.tip, linetype = "Burgenland")) +
geom_line() +
geom_line(data = tip2, aes(x.tip, y.tip,  linetype = "Carinthia")) +
scale_x_continuous(expression(p), limits = c(0, 0.3)) +
scale_y_continuous(expression(TIP(p,z[i]))) +
scale_linetype_discrete(name = "Region") +
theme_bw() +
theme(legend.background = element_rect(colour = "black"),
legend.position=c(0.825,0.15))
print(p5)
library(rtip)
set.seed(1972)
# Datasets
# --------
# A synthetic dataset generated from real Austrian EU-SILC:
data(eusilc2)
head(eusilc2, 3)
# The Spanish National Statistics Institute (INE in spanish)
# release for the living conditions survey in 2014:
data(LCS2014)
head(LCS2014,3)
# Setup the dataset
# -----------------
dataset <- setupDataset(eusilc2, country = "AT", region = NULL,
s = NULL, deflator = NULL, pppr = NULL)
head(dataset,3)
arpt(dataset, ipuc = "ipuc", hhcsw = "DB090", hhsize = "HX040",
pz = 0.6, ci = NULL, rep = 500, verbose = FALSE) # Default values
# median equivalised disposable income:
arpt60 <- arpt(dataset)
arpr(dataset, arpt.value = arpt60)
arpr(dataset, arpt.value = arpt60, ci = 0.98) #  confidence interval
# Percentage of persons with an equivalised disposable income below 40% of the
# median equivalised disposable income:
arpt40 <- arpt(dataset, pz = 0.4)
arpr(dataset, arpt.value = arpt40)
## Maximum of TIP curve: a measure of the intensity of poverty.
# It is equal to the mean poverty gap, if norm = FALSE, or the normalised mean
# poverty gap if norm = TRUE.
s1(dataset, arpt.value = arpt60, norm = TRUE)
## Other measurements:
# gini(dataset, ci = 0.99)
# rmpg(dataset, ci = 0.99)
# qsr(dataset, ci = 0.99)
# mip(dataset, ci = 0.99)
# mih(dataset, ci = c(0.90, 0.99))
# miuc(dataset, ci = c(0.90, 0.99))
# s2(dataset, arpt.value = arpt(dataset), norm = TRUE, ci = 0.99)
# Curves for inequality, welfare and poverty
# ------------------------------------------
## Lorenz curve:
Burgenland <- setupDataset(eusilc2, country = "AT", region = "Burgenland")
lorenz_curve <- lc(Burgenland, generalized = FALSE, plot=TRUE)
p1 <- ggplot(lorenz_curve, aes(x.lg, y.lg)) + geom_line() +
geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1), linetype = "dotted", color = "grey") +
scale_x_continuous(expression(p)) +
scale_y_continuous(expression(L(p))) + theme_bw()
print(p1)
tip_curve <- tip(Burgenland, arpt.value = arpt(Burgenland), norm = TRUE, plot = TRUE)
p2 <- ggplot(tip_curve, aes(x.tip, y.tip)) + geom_line() +
scale_x_continuous(expression(p)) +
scale_y_continuous(expression(TIP(p, z))) + theme_bw()
print(p2)
Burgenland <- setupDataset(eusilc2, country = "AT", region = "Burgenland")
Carinthia <- setupDataset(eusilc2, country = "AT", region = "Carinthia")
testGL(Burgenland, Carinthia, generalized = TRUE, samplesize = 10)
testGL(Carinthia, Burgenland, generalized = FALSE, samplesize = 10)
Burgenland <- setupDataset(eusilc2, country = "AT", region = "Burgenland")
Carinthia <- setupDataset(eusilc2, country = "AT", region = "Carinthia")
nsample = 10
dat1 <- OmegaGL(Burgenland, samplesize = nsample, generalized = FALSE)
dat2 <- OmegaGL(Carinthia, samplesize =  nsample, generalized = FALSE)
data1 <- as.data.frame(dat1[2:3])
data2 <- as.data.frame(dat2[2:3])
data1<-rbind(c(0,0), data1)
data2<-rbind(c(0,0), data2)
data1$se <- c(NA, sqrt(diag(dat1$Omega)), NA)
data2$se <- c(NA, sqrt(diag(dat2$Omega)), NA)
p3 <- ggplot(data = data1, aes(p, gl.curve, linetype = "Burgenland")) +
geom_line() +
geom_ribbon(aes(ymin=gl.curve-se*qnorm(0.975), ymax=gl.curve+se*qnorm(0.975)), fill = "grey70", alpha=0.3) +
geom_line(data = data2, aes(p, gl.curve, linetype = "Carinthia")) +
geom_ribbon(data = data2, aes(ymin=gl.curve-se*qnorm(0.975), ymax=gl.curve+se*qnorm(0.975)), fill = "grey70", alpha=0.3) +
geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1), linetype = "dotted", color = "grey") +
scale_x_continuous(expression(p)) +
scale_y_continuous(expression(L(p))) +
scale_linetype_discrete(name = "Region") +
theme_bw() +
theme(legend.background = element_rect(colour = "black"),
legend.position=c(0.825,0.15))
print(p3)
p4 <- ggplot(data = data1, aes(p, gl.curve, linetype = "Burgenland")) +
geom_line() +
geom_line(data = data2, aes(p, gl.curve, linetype = "Carinthia")) +
geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1), linetype = "dotted", color = "grey") +
scale_x_continuous(expression(p)) +
scale_y_continuous(expression(L(p))) +
scale_linetype_discrete(name = "Region") +
theme_bw() +
theme(legend.background = element_rect(colour = "black"),
legend.position=c(0.825,0.15))
print(p4)
testTIP(Carinthia, Burgenland, norm = TRUE, samplesize = 50)
